## automake - create Makefile.in from Makefile.am
## Copyright (C) 2001, 2002, 2003  Free Software Foundation, Inc.

## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2, or (at your option)
## any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
## 02111-1307, USA.

## ----------------------------------------- ##
## installdirs -- Creating the installdirs.  ##
## ----------------------------------------- ##


if %?SUBDIRS%
.PHONY: installdirs installdirs-am
RECURSIVE_TARGETS += installdirs-recursive
installdirs: installdirs-recursive
installdirs-am:%installdirs-local%
?am__installdirs?	$(mkdir_p) %am__installdirs%
else !%?SUBDIRS%
.PHONY: installdirs
installdirs:%installdirs-local%
?am__installdirs?	$(mkdir_p) %am__installdirs%
endif !%?SUBDIRS%


## ----------------- ##
## Install targets.  ##
## ----------------- ##

.PHONY: install install-exec install-data uninstall
.PHONY: install-exec-am install-data-am uninstall-am

if %?SUBDIRS%
RECURSIVE_TARGETS += install-data-recursive install-exec-recursive \
		     install-recursive uninstall-recursive
install:%maybe_BUILT_SOURCES% install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive
else !%?SUBDIRS%
install:%maybe_BUILT_SOURCES% install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am
endif !%?SUBDIRS%

# Wrap the installation in an environment which has MANIFEST_FD open on
# a manifest file which the rest of the installation
# should append to.  Only do this if STAR_MANIFEST_DIR is defined and
# MANIFEST_FD isn't -- this should always be the case, but don't
# fail if it isn't.  If we permit MANIFEST_FD to be defined, then
# (a) it makes it possible to control this from outside by defining
# this variable deliberately (given that we were ever to decide that
# was a cunning plan), and (b) if one of these makefiles has its
# `install-am' target invoked (which I don't _think_ should happen)
# then we don't end up creating two manifests.
.PHONY: install-am
install-am: all-am
if %?INSTALLMANIFEST%
# Create an install manifest, and install it in the required manifest location
	if test -n "$(STAR_MANIFEST_DIR)" -a -z "$(MANIFEST_FD)"; then \
	    $(mkdir_p) $(DESTDIR)$(STAR_MANIFEST_DIR); \
	    MF=$${TMPDIR-/tmp}/manifest-$$$$; rm -f $$MF && exec 5>$$MF && \
	    echo "<?xml version='1.0'?>"                          >&5 ; \
	    echo "<!DOCTYPE manifest SYSTEM 'componentinfo.dtd'>" >&5 ; \
	    echo "<manifest component='$(PACKAGE_NAME)'>"         >&5 ; \
	    echo "<version>$(PACKAGE_VERSION)</version>"          >&5 ; \
	    echo "<files>"                                        >&5 ; \
## If this is a standard package, then it's easy -- just define the
## MANIFEST_FD variable in the environment.
?STANDARDMANIFEST?	    MANIFEST_FD=5 $(MAKE) $(AM_MAKEFLAGS) \
?STANDARDMANIFEST?	        install-exec-am install-data-am; \
## Otherwise, install the component to a staging area, using the
## STAR_MANIFEST_INSTALL_COMMAND defined in the Makefile.am, here available
## in MANIFESTMAKEINSTALL.
?!STANDARDMANIFEST?	    STG=$${TMPDIR-/tmp}/starconf-$$$$ ; \
?!STANDARDMANIFEST?	    rm -Rf $$STG ; \
?!STANDARDMANIFEST?	    $(mkdir_p) $$STG ; \
?!STANDARDMANIFEST?	    ( DESTDIR=$$STG; prefix=$(prefix); \
?!STANDARDMANIFEST?	        export DESTDIR prefix; \
?!STANDARDMANIFEST?	        %MANIFESTMAKEINSTALL% ) ; \
?!STANDARDMANIFEST?	    $(mkdir_p) $(DESTDIR)$(prefix) ; \
## Find all the files in the staging area $STG, add any final installation
## location, append each of these to the manifest FD, and delete each
## (installed) file, so that the cp below will work.  There is a potential
## problem here in that files which are not regular files or links will not
## appear in the manifest; but they should still be installed.
?!STANDARDMANIFEST?	    (cd $$STG && find . -type f -o -type l | \
?!STANDARDMANIFEST?	      sed "s,^\.,$$DESTDIR," | \
?!STANDARDMANIFEST?	      while read f; do \
?!STANDARDMANIFEST?	        echo $$f>&5; \
?!STANDARDMANIFEST?	        test -f $$f && { chmod 777 $$f && rm -f $$f; }; \
?!STANDARDMANIFEST?	      done ); \
?!STANDARDMANIFEST?	    echo "(cd $$STG; cp -R . $${DESTDIR-/})"; \
?!STANDARDMANIFEST?	    (cd $$STG; cp -R . $${DESTDIR-/}); \
?!STANDARDMANIFEST?	    rm -Rf $$STG; \
	    echo "</files>"                                       >&5; \
	    echo "</manifest>"                                    >&5; \
	    exec 5>&-; \
	    $(INSTALL_DATA) $$MF $(DESTDIR)$(STAR_MANIFEST_DIR)/$(PACKAGE); \
	    rm -f $$MF; \
	else \
	    $(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am; \
	fi
else !%?INSTALLMANIFEST%
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
endif !%?INSTALLMANIFEST%
## Starlink: install a stamp file, just in case install-manifest isn't run
	rm -f stamp-starlink-install
	echo "component=\"$(PACKAGE_NAME)\"" >stamp-starlink-install
	echo "version=\"$(PACKAGE_VERSION)\"" >>stamp-starlink-install
	echo "date=\"`date`\"" >>stamp-starlink-install
	$(mkdir_p) $(STAR_MANIFEST_DIR)
	$(INSTALL_DATA) stamp-starlink-install \
	    $(STAR_MANIFEST_DIR)/stamp-`echo $(PACKAGE_NAME) | sed 's/[^A-Za-z0-9.-]/_/g'`
	rm -f stamp-starlink-install


.PHONY: installcheck
?SUBDIRS?installcheck: installcheck-recursive
?!SUBDIRS?installcheck: installcheck-am
?!SUBDIRS?.PHONY: installcheck-am
?!SUBDIRS?installcheck-am:

## If you ever modify this, keep in mind that INSTALL_PROGRAM is used
## in subdirectories, so never set it to a value relative to the top
## directory.
.PHONY: install-strip
install-strip:
## Beware that they are two variables used to install programs:
##   INSTALL_PROGRAM is used for ordinary *_PROGRAMS
##   install_sh_PROGRAM is used for nobase_*_PROGRAMS (because install-sh
##                                                     creates directories)
## It's OK to override both with INSTALL_STRIP_PROGRAM, because
## INSTALL_STRIP_PROGRAM uses install-sh (see m4/strip.m4 for a rational).
##
## Use double quotes here because we might need to interpolate some
## backquotes at runtime.
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
